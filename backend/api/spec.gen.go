// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"BQAA///GpsHm/RsAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
