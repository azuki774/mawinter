// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"7O7/AgAA///QNqWIBhwAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
